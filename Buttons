void autonButton(int x, int y, int width, int height){
  Brain.Screen.drawRectangle(x, y, width, height);
}

void checkAutonPress() {
  if (Brain.Screen.pressing()) {
    if ((Brain.Screen.xPosition() >= 280 &&
         Brain.Screen.xPosition() <= 280 + 125) &&
        (Brain.Screen.yPosition() >= 80 &&
         Brain.Screen.yPosition() <= 80 + 75)) {
      auton();
    }
  }
}

int main(){
  Brain.Screen.setFont(mono40);
  resetEncoders();
  Inertial.startCalibration();
  vex::this_thread::sleep_for(2000);
  autonButton(280, 80, 120, 75);
  Brain.Screen.printAt(280, 100, "Auton");
  while(1){
    Brain.Screen.printAt( 10, 50, "Angle %6.1f", Inertial.orientation(yaw, degrees));
    Brain.Screen.printAt( 10, 200, "AVG %6.1f", avgPosition());
    Brain.Screen.pressed(checkAutonPress);

    vex::this_thread::sleep_for(50);
  }

  Competition.autonomous(autonomous);
  Competition.drivercontrol(usercontrol);
  pre_auton();
  while (true){
    wait(100, msec);
  }
}
